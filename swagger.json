{
  "openapi": "3.0.1",
  "info": {
    "title": "WaterTracker API",
    "description": "API for managing user water consumption",
    "version": "1.0.12"
  },
  "servers": [{ "url": "https://water-tracker-api-6z23.onrender.com/" }],
  "tags": [
    {
      "name": "User",
      "description": "Information about user"
    },
    {
      "name": "WaterRate",
      "description": "Calculation of the daily rate of water consumption"
    },
    {
      "name": "Water",
      "description": "Editing of consumed water"
    },
    {
      "name": "Today",
      "description": "Calculation of consumed water for the current day"
    },
    {
      "name": "Month",
      "description": "Getting information of consumed water for the selected month"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignUpRequest"
              },
              "example": {
                "email": "example@example.com",
                "password": "password123"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },

          "401": {
            "description": "Email or password is wrong"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Email in use"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignInRequest"
              },
              "example": {
                "email": "example@example.com",
                "password": "password123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSignInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Email or password is wrong"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["User"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get information about the current user",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Upload or update user avatar",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload as user avatar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "No file"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/profile": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user information",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "gender must be one of [Woman, Man]"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/waterrate": {
      "patch": {
        "tags": ["WaterRate"],
        "summary": "Set daily water consumption rate for user",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRateResponse"
                }
              }
            }
          },

          "400": {
            "description": "dailyNorma must be less than or equal to 15"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/water": {
      "post": {
        "tags": ["Water"],
        "summary": "Add water consumption record for signed in user",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },

          "400": {
            "description": "waterVolume cannot exceed 5000"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/water/{id}": {
      "patch": {
        "tags": ["Water"],
        "summary": "Update water consumption record for signed in user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the water consumption record to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWaterResponse"
                }
              }
            }
          },

          "400": {
            "description": "waterVolume cannot exceed 5000"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Water"],
        "summary": "Delete water consumption record for signed in user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the water consumption record to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWaterResponse"
                }
              }
            }
          },

          "400": {
            "description": "waterVolume cannot exceed 5000"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/water/today": {
      "get": {
        "tags": ["Today"],
        "summary": "Get today's water consumption details",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyWaterResponse"
                }
              }
            }
          },

          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/water/month/{date}": {
      "get": {
        "tags": ["Month"],
        "summary": "Get water consumption details for selected month",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Date for which to retrieve water consumption details, formatted as YYYY-MM"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthlyWaterResponse"
                }
              }
            }
          },

          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],

  "components": {
    "schemas": {
      "UserSignUpRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 64,
            "description": "User's password, must be between 8 and 64 characters"
          }
        },
        "required": ["email", "password"]
      },
      "UserSignUpResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Example"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address",
                "example": "example@example.com"
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "example": ""
              },
              "avatarURL": {
                "type": "string",
                "description": "URL or path to user's avatar",
                "example": ""
              },

              "dailyNorma": {
                "type": "number",
                "description": "User's daily norma",
                "example": 2000
              }
            }
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY2YzAzZjg0ZDhmYjZkYzZlYzMzNCIsImlhdCI6MTcWNjQ1NDAyMH0.QJuy3tAZFRuPiAsB-Wp4JJicwjszwR3nCEL2PzdOSds"
          }
        }
      },
      "UserSignInRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "description": "User's email address for login",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 64,
            "description": "User's password for login",
            "example": "qwerty123"
          }
        },
        "required": ["email", "password"]
      },
      "UserSignInResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "UserName"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address",
                "example": "example@example.com"
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "example": ""
              },
              "avatarURL": {
                "type": "string",
                "description": "URL or path to user's avatar",
                "example": "https://res.cloudinary.com/dytpmznz8/image/upload/v1706448821/avatars/65b423e86e2f1f84365454da.jpg"
              },
              "dailyNorma": {
                "type": "number",
                "description": "User's daily norma",
                "example": 2000
              }
            }
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY2YzAzZjg0ZDhmYjZkYzZlYzMzNCIsImlhdCI6MTcWNjQ1NDAyMH0.QJuy3tAZFRuPiAsB-Wp4JJicwjszwR3nCEL2PzdOSds"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Example"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address",
                "example": "example@example.com"
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "example": ""
              },
              "avatarURL": {
                "type": "string",
                "description": "URL or path to user's avatar",
                "example": ""
              },

              "dailyNorma": {
                "type": "number",
                "description": "User's daily norma",
                "example": 2000
              }
            }
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY2YzAzZjg0ZDhmYjZkYzZlYzMzNCIsImlhdCI6MTcWNjQ1NDAyMH0.QJuy3tAZFRuPiAsB-Wp4JJicwjszwR3nCEL2PzdOSds"
          }
        }
      },
      "UpdateAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "URL or path to user's avatar",
            "example": "https://res.cloudinary.com/dytpmznz8/image/upload/v1706448821/avatars/65b423e86e2f1f84365454da.jpg"
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "description": "User's name, maximum of 32 characters"
          },
          "email": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "description": "User's email address",
            "example": "user@example.com"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "User's gender"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 64,
            "description": "User's old password, for authentication during update"
          },
          "newPassword": {
            "type": "string",
            "minLength": 8,
            "maxLength": 64,
            "description": "User's new password, must be between 8 and 64 characters"
          }
        }
      },
      "UserUpdateResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Tetiana"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address",
                "example": "test@gmail.com"
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "example": "female"
              }
            },
            "required": ["name", "email", "gender"]
          }
        }
      },
      "WaterRateRequest": {
        "type": "object",
        "properties": {
          "dailyNorma": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1500,
            "description": "Daily water consumption rate in milliliters, must be between 1 and 15000"
          }
        },
        "required": ["waterRate"]
      },
      "WaterRateResponse": {
        "type": "object",
        "properties": {
          "dailyNorma": {
            "type": "number",
            "description": "User's daily norma",
            "example": 1700
          }
        }
      },
      "AddWaterRequest": {
        "type": "object",
        "required": ["waterVolume", "date"],
        "properties": {
          "waterVolume": {
            "type": "integer",
            "description": "Amount of water volume",
            "example": "250"
          },
          "date": {
            "type": "string",
            "description": "Date of water intake",
            "example": "YYYY-MM-DDTHH:MM:SS.SSSZ"
          }
        }
      },
      "AddWaterResponse": {
        "type": "object",
        "properties": {
          "waterVolume": {
            "type": "integer",
            "description": "Amount of water volume",
            "example": "250"
          },
          "date": {
            "type": "string",
            "description": "Date of water intake",
            "example": "YYYY-MM-DDTHH:MM:SS.SSSZ"
          },
          "_id": {
            "type": "string",
            "description": "Water id",
            "example": "65b6896be224fbb3f1f8c92b"
          }
        }
      },
      "UpdateWaterRequest": {
        "type": "object",
        "required": ["id", "waterVolume", "time"],
        "properties": {
          "waterVolume": {
            "type": "integer",
            "description": "Amount of water volume",
            "example": "250"
          },
          "date": {
            "type": "string",
            "description": "Date of water intake",
            "example": "YYYY-MM-DDTHH:MM:SS.SSSZ"
          }
        }
      },
      "UpdateWaterResponse": {
        "type": "object",
        "properties": {
          "waterVolume": {
            "type": "number",
            "description": "Amount of water volume",
            "example": "250"
          },
          "date": {
            "type": "string",
            "description": "Date of water intake",
            "example": "YYYY-MM-DDTHH:MM:SS.SSSZ"
          },
          "_id": {
            "type": "string",
            "description": "Water id",
            "example": "65b6896be224fbb3f1f8c92b"
          }
        }
      },
      "DeleteWaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Water id",
            "example": "65b6896be224fbb3f1f8c92b"
          }
        }
      },
      "DailyWaterResponse": {
        "type": "object",
        "properties": {
          "servingsCount": {
            "type": "integer",
            "example": 5
          },
          "fulfillment": {
            "type": "integer",
            "example": 56
          },
          "dayNotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "waterVolume": {
                  "type": "number",
                  "description": "Amount of water volume",
                  "example": "250"
                },
                "date": {
                  "type": "string",
                  "description": "Date of water intake",
                  "example": "YYYY-MM-DDTHH:MM:SS.SSSZ"
                },
                "_id": {
                  "type": "string",
                  "description": "Water id",
                  "example": "65b6896be224fbb3f1f8c92b"
                }
              }
            }
          },
          "totalVolume": {
            "type": "integer",
            "example": 2250
          },
          "dailyNorma": {
            "type": "integer",
            "example": 4000
          }
        }
      },
      "MonthlyWaterResponse": {
        "type": "object",
        "properties": {
          "month": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "example": "YYYY-MM-DDTHH:MM:SS.SSSZ"
                },
                "dailyNorma": { "type": "number", "example": 1700 },
                "totalVolume": { "type": "number", "example": 5000 },
                "fulfillment": { "type": "integer", "example": 44 },
                "servingCount": { "type": "number", "example": 5 }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
